apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: payment
  annotations:
    ootb.apps.tanzu.vmware.com/servicebinding-workload: "true"
    ootb.apps.tanzu.vmware.com/apidescriptor-ref: "true"
  labels:
    app.kubernetes.io/part-of: payment-demo
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/pipeline: test
    apps.tanzu.vmware.com/workload-type: web
    kapp.k14s.io/app: "1667611324394157000"
    kapp.k14s.io/association: v1.512b9db28ae567f8ac011e6705662d13
    app.kubernetes.io/component: run
    carto.run/workload-name: payment
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/max-scale: "10"
        autoscaling.knative.dev/min-scale: "2"
        autoscaling.knative.dev/target: "10"
        boot.spring.io/actuator: http://:8081/actuator
        boot.spring.io/version: 3.0.0-RC1
        conventions.carto.run/applied-conventions: |-
          spring-boot-convention/spring-boot
          spring-boot-convention/spring-boot-graceful-shutdown
          spring-boot-convention/spring-boot-web
          spring-boot-convention/spring-boot-actuator
          spring-boot-convention/service-intent-postgres
          spring-boot-convention/service-intent-rabbitmq
          appliveview-sample/app-live-view-appflavour-check
          appliveview-sample/app-live-view-connector-boot
          appliveview-sample/app-live-view-appflavours-boot
          appliveview-sample/app-live-view-systemproperties
        developer.conventions/target-containers: workload
        kapp.k14s.io/identity: v1;team-tanzu/carto.run/Workload/payment;carto.run/v1alpha1
        kapp.k14s.io/original: '{"apiVersion":"carto.run/v1alpha1","kind":"Workload","metadata":{"labels":{"app.kubernetes.io/part-of":"payment-demo","apps.tanzu.vmware.com/has-tests":"true","apps.tanzu.vmware.com/pipeline":"test","apps.tanzu.vmware.com/workload-type":"web","kapp.k14s.io/app":"1667611324394157000","kapp.k14s.io/association":"v1.512b9db28ae567f8ac011e6705662d13"},"name":"payment","namespace":"team-tanzu"},"spec":{"build":{"env":[{"name":"BP_JVM_VERSION","value":"17"}]},"env":[{"name":"PAYMENTS_HOST","value":"payment-service:8080"}],"params":[{"name":"annotations","value":{"autoscaling.knative.dev/max-scale":"10","autoscaling.knative.dev/min-scale":"2","autoscaling.knative.dev/target":"10"}}],"serviceClaims":[{"name":"db","ref":{"apiVersion":"sql.tanzu.vmware.com/v1","kind":"Postgres","name":"payment-db"}},{"name":"broker","ref":{"apiVersion":"rabbitmq.com/v1beta1","kind":"RabbitmqCluster","name":"rabbit"}}],"source":{"git":{"ref":{"branch":"main"},"url":"https://github.com/Turbots/tanzu-demo.git"},"subPath":"payment-service"}}}'
        kapp.k14s.io/original-diff-md5: c6e94dc94aed3401b5d0f26ed6c0bff3
        services.conventions.apps.tanzu.vmware.com/postgres: postgresql/42.5.0
        services.conventions.apps.tanzu.vmware.com/rabbitmq: amqp-client/5.16.0
      labels:
        app.kubernetes.io/component: run
        app.kubernetes.io/part-of: payment-demo
        apps.tanzu.vmware.com/has-tests: "true"
        apps.tanzu.vmware.com/pipeline: test
        apps.tanzu.vmware.com/workload-type: web
        carto.run/workload-name: payment
        conventions.apps.tanzu.vmware.com/framework: spring-boot
        kapp.k14s.io/app: "1667611324394157000"
        kapp.k14s.io/association: v1.512b9db28ae567f8ac011e6705662d13
        services.conventions.apps.tanzu.vmware.com/postgres: workload
        services.conventions.apps.tanzu.vmware.com/rabbitmq: workload
        tanzu.app.live.view: "true"
        tanzu.app.live.view.application.actuator.port: "8081"
        tanzu.app.live.view.application.flavours: spring-boot
        tanzu.app.live.view.application.name: payment
    spec:
      containers:
      - env:
        - name: PAYMENTS_HOST
          value: payment-service:8080
        - name: JAVA_TOOL_OPTIONS
          value: -Dmanagement.endpoint.health.show-details=always -Dmanagement.endpoints.web.base-path="/actuator" -Dmanagement.endpoints.web.exposure.include=* -Dmanagement.server.port="8081" -Dserver.port="8080" -Dserver.shutdown.grace-period="24s"
        image: harbor.vsphere.hubau.cloud/library/payment-team-tanzu@sha256:9f446efc7d656d775e393de3b93863b1bea06cbb080d3862a388985c05311c8a
        name: workload
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        securityContext:
          runAsUser: 1000
      serviceAccountName: default

